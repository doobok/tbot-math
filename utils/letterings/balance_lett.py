import re

from aiogram import types
from aiogram.dispatcher import FSMContext

from data.config import api_host
from states.user import BalanceRefill
from utils.db.db_api.users import User
from utils.keyboards.student_kbd import st_balance_confirm, st_balance_cancel
from utils.misc.user_utils import errors_msg
from utils.requests.users_reqests import UserRequest


async def tutor_balance_text(user_id: int, state: FSMContext):
    user = await User.find(user_id, state)
    res = await UserRequest.get_balance(user.get('role'), user.get('role_id'))
    if res.get('success') is True:
        balance = res.get('balance')
        txt = [
            'üë®‚Äçü¶≥ –ù–∞ –í–∞—à–æ–º—É –±–∞–ª–∞–Ω—Å—ñ ',
            f'üí∂ <b>{balance} –≥—Ä–Ω.*</b>',
            '–Ω–∞–ª–µ–∂–Ω–∏—Ö –¥–æ –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è',
            '<i>*–≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è –Ω–∞—Ä–∞—Ö–æ–≤—É—é—Ç—å—Å—è —Ä–∞–∑ –Ω–∞ –¥–æ–±—É –ø—ñ–¥ –∫—ñ–Ω–µ—Ü—å –¥–æ–±–∏</i>'
        ]
    else:
        txt = [errors_msg['is-err']]

    return '\n\n'.join(txt)


async def student_balance_text(user_id: int, state: FSMContext):
    await state.reset_state(with_data=False)
    user = await User.find(user_id, state)
    res = await UserRequest.get_balance(user.get('role'), user.get('role_id'))
    if res.get('success') is True:
        balance = res.get('balance')
        if balance > 500:
            info = 'üòâ –ù–∞ —Ç–≤–æ—î–º—É –±–∞–ª–∞–Ω—Å—ñ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤, –ü—Ä–∏—î–º–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è!'
        elif balance > 0:
            info = 'üòê –ö–æ—à—Ç–∏ –∑–∞–∫—ñ–Ω—á—É—é—Ç—å—Å—è, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ —Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∑–±–æ—ó–≤ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ –∑ —Å–∏—Å—Ç–µ–º–æ—é'
        else:
            info = 'ü•∂ –ë–∞–ª–∞–Ω—Å —Å–ø—É—Å—Ç–æ—à–µ–Ω–æ! –ú–æ–∂–ª–∏–≤—ñ –æ–±–º–µ–∂–µ–Ω–Ω—è –≤ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—ñ! –ü–æ–ø–æ–≤–Ω—ñ—Ç—å, –±—É–¥—å-–ª–∞—Å–∫–∞, —Ä–∞—Ö—É–Ω–æ–∫'
        txt = [
            'üë®‚Äçü¶≥ –ù–∞ —Ç–≤–æ—î–º—É –±–∞–ª–∞–Ω—Å—ñ ',
            f'üí∂ <b>{balance} –≥—Ä–Ω.*</b>',
            f'{info}',
            '<i>*—Å–ø–∏—Å–∞–Ω–Ω—è –∫–æ—à—Ç—ñ–≤ –∑ –±–∞–ª–∞–Ω—Å—É –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —Ä–∞–∑ –Ω–∞ –¥–æ–±—É</i>'
        ]
    else:
        txt = [errors_msg['is-err']]

    return '\n\n'.join(txt)


async def enter_balance_text(state: FSMContext):
    await BalanceRefill.enter_sum.set()
    txt = ['üë®‚Äçü¶≥ –ù–∞ —è–∫—É —Å—É–º—É —Ç–∏ –±–∞–∂–∞—î—à –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ —Å–≤—ñ–π –±–∞–ª–∞–Ω—Å?']
    return '\n'.join(txt)


async def enter_balance_sum_text(msg: types.Message, state: FSMContext):
    cost = ''.join(re.findall(r'\d', msg.text))
    keyboard = st_balance_cancel()
    if len(cost) < 1:
        txt = 'üë®‚Äçü¶≥ –í–≤–µ–¥–∏ —á–∏—Å–ª–æ, –±—É–¥—å-–ª–∞—Å–∫–∞'
    else:
        cost = int(cost)
        if cost < 200:
            txt = errors_msg['cost-more']
        elif cost > 20000:
            txt = errors_msg['cost-less']
        else:
            txt = f'üë®‚Äçü¶≥ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏ –±–∞–ª–∞–Ω—Å –Ω–∞ <b>{cost} –≥—Ä–Ω</b>?'
            keyboard = st_balance_confirm()
            await state.update_data(cost=cost)
            await BalanceRefill.next()
    await msg.answer(txt, reply_markup=keyboard)


async def confirm_balance_text(state: FSMContext):
    data = await state.get_data()
    cost = data.get('cost')
    link = '%s/refill-bot?role_id=%s&sum=%s&phone=%s' \
           % (api_host['url'], data.get('role_id'), cost, data.get('phone'))
    txt = [f'üë®‚Äçü¶≥ –î–ª—è —Ç–æ–≥–æ, —â–æ–± –ø–æ–ø–æ–≤–Ω–∏—Ç–∏ —Ä–∞—Ö—É–Ω–æ–∫ –Ω–∞ <b>{cost} –≥—Ä–Ω.</b>, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º üëá\n',
           f'{link}',
           '\n—Ç–∞ –¥–æ—Ç—Ä–∏–º—É—é—á–∏—Å—å –ø—ñ–¥–∫–∞–∑–æ–∫ –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –ø–ª–∞—Ç—ñ–∂.\n']
    await state.reset_state(with_data=False)
    return '\n'.join(txt)
