from utils.db.db_api.users import User
from utils.misc.date_utils import date_with_weekday
from utils.misc.user_utils import errors_msg
from utils.requests.users_reqests import UserRequest


async def st_lesson_history_text(user_id: int):
    user = await User.find(user_id)
    res = await UserRequest.st_lessons_history(user.get('role_id'))
    if res.get('success') is True:
        txt = ['üë®‚Äçü¶≥ –û—Å—å —Ç–≤–æ—ó –Ω–µ—â–æ–¥–∞–≤–Ω—ñ –∑–∞–Ω—è—Ç—Ç—è:\n']
        for ls in res.get('lessons'):
            txt.append('üëâ –∑–∞–Ω—è—Ç—Ç—è %s' % date_with_weekday(ls.get('created_at')))
        txt.append('\n*<i>–¶–µ–π –ø–µ—Ä–µ–ª—ñ–∫ –º—ñ—Å—Ç–∏—Ç—å –¥–æ 10 –∑–∞–Ω—è—Ç—å, —è–∫—ñ –≤—ñ–¥–±—É–ª–∏—Å—å –Ω–µ—â–æ–¥–∞–≤–Ω–æ</i>')
    else:
        txt = [errors_msg['is-err']]

    return '\n'.join(txt)


async def st_pass_history_text(user_id: int):
    user = await User.find(user_id)
    res = await UserRequest.st_pass_history(user.get('role_id'))
    if res.get('success') is True:
        passes = res.get('passes')
        print(len(passes))
        if len(passes) > 0:
            txt = ['üë®‚Äçü¶≥ –ó–∞–Ω—è—Ç—Ç—è, –ø—Ä–æ–ø—É—â–µ–Ω—ñ —Ç–æ–±–æ—é:\n']
            for ps in passes:
                txt.append('‚ùå –ø—Ä–æ–ø—É—Å–∫ %s' % date_with_weekday(ps.get('created_at')))
            txt.append('\n*<i>–¶–µ–π –ø–µ—Ä–µ–ª—ñ–∫ –≤–º—ñ—â–∞—î –¥–æ 10 –Ω–µ—â–æ–¥–∞–≤–Ω—ñ—Ö –ø—Ä–æ–ø—É—Å–∫—ñ–≤</i>')
        else:
            txt = ['üéâ –ù–∞ –¥–∞–Ω–∏–π —á–∞—Å –≤ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–æ–ø—É—Å–∫—ñ–≤.\n–¢–∞–∫ —Ç—Ä–∏–º–∞—Ç–∏! üëç']
    else:
        txt = [errors_msg['is-err']]

    return '\n'.join(txt)
