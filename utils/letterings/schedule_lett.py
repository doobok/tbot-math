from utils.db.db_api.users import User
from utils.misc.user_utils import errors_msg
from utils.requests.users_reqests import UserRequest


async def st_lesson_history_text(user_id: int):
    user = await User.find(user_id)
    res = await UserRequest.st_lessons_history(user.get('role_id'))
    print(res)
    if res.get('success') is True:
        txt = ['üë®‚Äçü¶≥ –û—Å—å —Ç–≤–æ—ó –Ω–µ—â–æ–¥–∞–≤–Ω—ñ –∑–∞–Ω—è—Ç—Ç—è:']
        for ls in res.get('lessons'):
            txt.append('üëâ –∑–∞–Ω—è—Ç—Ç—è %s' % ls.get('created_at')[:10])
        txt.append('*<i>–¶–µ–π –ø–µ—Ä–µ–ª—ñ–∫ –≤–º—ñ—â–∞—î –ª–∏—à–µ –∫—ñ–ª—å–∫–∞ –Ω–µ—â–æ–¥–∞–≤–Ω—ñ—Ö –∑–∞–Ω—è—Ç—å</i>')
    else:
        txt = [errors_msg['is-err']]

    return '\n\n'.join(txt)


async def st_pass_history_text(user_id: int):
    user = await User.find(user_id)
    res = await UserRequest.st_pass_history(user.get('role_id'))
    print(res)
    if res.get('success') is True:
        txt = ['üë®‚Äçü¶≥ –ó–∞–Ω—è—Ç—Ç—è, –ø—Ä–æ–ø—É—â–µ–Ω—ñ —Ç–æ–±–æ—é:']
        for ls in res.get('passes'):
            txt.append('üëâ –ø—Ä–æ–ø—É—Å–∫ %s' % ls.get('created_at')[:10])
        txt.append('*<i>–¶–µ–π –ø–µ—Ä–µ–ª—ñ–∫ –≤–º—ñ—â–∞—î –¥–æ 10 –Ω–µ—â–æ–¥–∞–≤–Ω—ñ—Ö –ø—Ä–æ–ø—É—Å–∫—ñ–≤</i>')
    else:
        txt = [errors_msg['is-err']]

    return '\n\n'.join(txt)
